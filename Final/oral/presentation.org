# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer
#+STARTUP: overview
#+STARTUP: indent
#+TAGS: noexport(n)

#+Title: \textbf{TER} \\ Simulation d'application dynamiques pour plateformes de calculs hautes performances \bigskip\\ \large Équipe MESCAL
#+Author: Steven QUINITO MASNADA
#+DATE: Grenoble, 8 Juin 2015

#+EPRESENT_FRAME_LEVEL: 2

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:2 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t

#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage[american]{babel}
#+LATEX_HEADER: \usepackage{ifthen,figlatex,amsmath,amstext,gensymb,amssymb}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: %%%%%%%%% Begin of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \ProcessOptionsBeamer
#+LATEX_HEADER: \usecolortheme{whale}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
#+LATEX_HEADER: \useinnertheme{rounded}
#+LATEX_HEADER: \useoutertheme{infolines}
#+LATEX_HEADER: \setbeamertemplate{footline}[frame number]
#+LATEX_HEADER: \setbeamertemplate{headline}[default]
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \defbeamertemplate*{headline}{info theme}{}
#+LATEX_HEADER: \defbeamertemplate*{footline}{info theme}{\leavevmode%
#+LATEX_HEADER:   \hbox{%
#+LATEX_HEADER:     \begin{beamercolorbox}[wd=.3\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
#+LATEX_HEADER:       \usebeamerfont{author in head/foot}\insertshortauthor
#+LATEX_HEADER:     \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.61\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{title in head/foot}\insertsectionhead
#+LATEX_HEADER:   \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.09\paperwidth,ht=2.25ex,dp=1ex,right]{section in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{section in head/foot}\insertframenumber{}~/~\inserttotalframenumber\hspace*{2ex} 
#+LATEX_HEADER:   \end{beamercolorbox}
#+LATEX_HEADER:   }\vskip0pt}
#+LATEX_HEADER: \setbeamertemplate{footline}[info theme]
#+LATEX_HEADER: %%%%%%%%% End of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \usepackage{verbments}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{url} \urlstyle{sf}

#+LATEX_HEADER: \let\alert=\structure % to make sure the org * * works of tools
#+BEAMER_FRAME_LEVEL: 2
#+LATEX_HEADER: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

* Contexte et problèmatique
** Architecture et standard HPC
   #+BEGIN_LaTeX
   \begin{figure}[tbh]
   \centering
   \vspace{-1.5mm}
   \includegraphics[width=\linewidth]{./Slides/Archi.pdf}
   \end{figure}
   #+END_LaTeX

** Limites des approches classiques
- Utiliser *plusieurs paradigmes* $\leadsto$ *programmation complexe*
- Exemple pour exploiter efficacement un GPU sur *un seul noeud*:
  - *transférer données* du CPU au GPU,
  - *lancer le calcul* sur le GPU
  - *gérer synchronisation* pendant attente résultat
  - *occuper* CPU
  - *récupérer* résultat.
- Et avec *plusieurs noeuds*?
- *Statique*, système réglé comme un horloge $\leadsto$ pas portable.
- Solution: *Dynamique* mais presque *impossible avec APIs classiques*.
** Nouvelle approche: Paradigme de tâches
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.55\linewidth}
#+END_LaTeX
- Nouvelle abstraction: les tâches
  - *Plus besoin de se soucier de la ressource* sur laquelle le
    traitement est effectué.
  - Exprimer calcul en *graphe de tâches* $\leadsto$ système dynamique
    plus simple.

#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
      \includegraphics[width=.8\linewidth]{../Img/task_graph.pdf}%
    \end{column}
  \end{columns}
#+END_LaTeX

- Librairie StarPU:
  - Système *runtime*
  - basé sur le paradigme de tâches $\leadsto$ graphe de dépendances.
  - Ordonnancemment *dynamique et opportuniste*. 
- Problèmatique : Performances difficiles à évaluer
  - Configuration *runtinme*, heuristique, politique ordonnancement.
  - Configuration *application*, découpage des tâches.
* Évaluation des performances en HPC
** Test sur systèmes réels
- Exécution réelle sur la plateforme cible $\leadsto$ *coûteux*
- Exéuction *non déterministe* nécessite de réaliser beaucoup
  d'expériences $\leadsto$ extrapolations difficiles. 
** Simulation
*** Généralités
- Utilisation de *modèles* pour *prédire* comportements.
- Permet s'affranchir de la plateforme $\leadsto$ peu coûteux.
- Contrôle paramètres $\leadsto$ *systèmes déterministes*.
- Extrapolation simplifiée.
- Exécution plus courte.

*** Simulation par rejeu de trace
Exécution post-mortem: pas adapté ici car *flot de contrôle non
déterministe*.
*** Hybride simulation / émulation
- Simuler plateforme et OS.
- Emuler de l'application.
* Analyse du problème
** SimGrid: Généralités
   #+BEGIN_LaTeX
   \begin{figure}
   \centering
   \vspace{-4.5mm}
   \includegraphics[width=\linewidth]{../Img/Simgrid.pdf}
   \end{figure}
   #+END_LaTeX

** Construction de l'application MPI simulée
   #+BEGIN_LaTeX
   \begin{figure}
   \centering
   \vspace{-3.5mm}
   \includegraphics[width=\linewidth]{./Slides/Compilev2.pdf}
   \end{figure}
   #+END_LaTeX

** Privatisation segment data
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.45\linewidth}
#+END_LaTeX
- Dans SimGrid les *processus* sont *modélisés par des threads* $\leadsto$
  espace adressage partagé.
- Mécanisme de privatisation: *ségment virtuel* (mmap)
  

#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.45\linewidth}
      \includegraphics[width=\linewidth]{../Img/Memoire.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

** StarPU MSG 
- Basé sur *MSG* car *modèle de performance plus proche* (communications,
  environnement mémoire partagé), CPUs GPUs.
- Simulation: calculs, allocations mémoire des tâches, transfert
  CUDA.
** StarPU SMPI: Difficultés de mise en oeuvre
- Besoin de *2 modèles de performances* différents à la fois:
 - *MSG* Intra noeuds $\leadsto$ mémoire partagée $\leadsto$ partage.
 - *SMPI* extra noeuds $\leadsto$ mémoire distribuée $\leadsto$
   privatisation.
- MSG et SMPI normalement pas utilisés ensemble $\leadsto$ initialiser
  correctement les 2.
#+BEGIN_LaTeX
  \begin{columns}[]
    \begin{column}{.55\linewidth}
#+END_LaTeX
- Problème des librairies dynamiques.  
#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
   \includegraphics[width=.7\linewidth]{../Img/Dyn.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

* Méthodologie
** Techniques et études de l'existant
- Dépôt git submobules:
  - StarPU SMPI:
    - SimGrid
    - StarPU
- Suivi:
  - Cahier de laboratoire org mode github.
- Compréhension:
  - SimgGrid = 106 350 lignes de codes.
  - StarPU = 172 251 lignes de codes.
  - "Code mining" et vérifications: GDB, Valgrind.
* Contribution
** Modification de SimGrid
- Gestion segment data
- Initialisation MSG + SMPI
   #+BEGIN_LaTeX
   \begin{figure}[tbh]
   \centering
   \vspace{-1.5mm}
      \includegraphics[height=.8\paperheight]{../Img/Processus.pdf}
   \end{figure}
   #+END_LaTeX

** Librairie dynamques et modifications StarPU
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.6\linewidth}
#+END_LaTeX

- Librairies dynamiques:
  - Utilisation librairies statiques.
- Modification StarPU:
  - Initialisation
#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
      \includegraphics[width=\linewidth]{../Img/StaticDyn.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

* Validation
** Validation
- Test simple: Modèle simplifié de StarPU $\leadsto$ isoler problèmes.
- Test StarPU: MPI, Cholesky $\leadsto$ valider modifications
* Conclusion
** Pour conclure
*** Bilan
- *StarPU + SimGrid modifié* pour simuler StarPU MPI.
- Difficulté: apporter *modifications minimes* dans un code *non trivial*.
*** Prochaine étape
- *Simulation et mesures* avec solveur d'algèbre linéaire.
- *Vérifications système réel*: Grid5000.
  
** Fin
Merci pour votre attention.
