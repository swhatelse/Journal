# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer
#+STARTUP: overview
#+STARTUP: indent
#+TAGS: noexport(n)

#+Title: \textbf{TER} \\ Simulation d'application dynamiques pour plateformes de calculs hautes performances
#+Author: Steven QUINITO MASNADA
#+DATE: Grenoble, 8 Juin 2015

#+EPRESENT_FRAME_LEVEL: 2

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:2 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t

#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage[american]{babel}
#+LATEX_HEADER: \usepackage{ifthen,figlatex,amsmath,amstext,gensymb,amssymb}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: %%%%%%%%% Begin of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \ProcessOptionsBeamer
#+LATEX_HEADER: \usecolortheme{whale}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
#+LATEX_HEADER: \useinnertheme{rounded}
#+LATEX_HEADER: \useoutertheme{infolines}
#+LATEX_HEADER: \setbeamertemplate{footline}[frame number]
#+LATEX_HEADER: \setbeamertemplate{headline}[default]
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \defbeamertemplate*{headline}{info theme}{}
#+LATEX_HEADER: \defbeamertemplate*{footline}{info theme}{\leavevmode%
#+LATEX_HEADER:   \hbox{%
#+LATEX_HEADER:     \begin{beamercolorbox}[wd=.3\paperwidth,ht=2.25ex,dp=1ex,center]{author in head/foot}%
#+LATEX_HEADER:       \usebeamerfont{author in head/foot}\insertshortauthor
#+LATEX_HEADER:     \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.61\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{title in head/foot}\insertsectionhead
#+LATEX_HEADER:   \end{beamercolorbox}%
#+LATEX_HEADER:   \begin{beamercolorbox}[wd=.09\paperwidth,ht=2.25ex,dp=1ex,right]{section in head/foot}%
#+LATEX_HEADER:     \usebeamerfont{section in head/foot}\insertframenumber{}~/~\inserttotalframenumber\hspace*{2ex} 
#+LATEX_HEADER:   \end{beamercolorbox}
#+LATEX_HEADER:   }\vskip0pt}
#+LATEX_HEADER: \setbeamertemplate{footline}[info theme]
#+LATEX_HEADER: %%%%%%%%% End of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \usepackage{verbments}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{url} \urlstyle{sf}

#+LATEX_HEADER: \let\alert=\structure % to make sure the org * * works of tools
#+BEAMER_FRAME_LEVEL: 2


#+LATEX_HEADER:   \institute{Équipe MESCAL/LIG\\Sous la direction d'A. Legrand}
#+LATEX_ATTR: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}

* Présentation générale
** Architecture et standards HPC
   #+BEGIN_LaTeX
   \begin{figure}[tbh]
   \centering
   \vspace{-1.5mm}
   \includegraphics[width=\linewidth]{./Slides/Archi.pdf}
   \end{figure}
   #+END_LaTeX

** Limites des approches classiques
- Utiliser *plusieurs paradigmes* $\leadsto$ *programmation complexe*
- Exemple pour exploiter efficacement un GPU sur *un seul noeud*:
  - transférer données du CPU au GPU,
  - lancer le calcul sur le GPU
  - gérer synchronisation pendant attente résultat
  - occuper CPU
  - récupérer résultat.
- Et avec *plusieurs noeuds/cores/GPUs* ?
  - *Statique*, système réglé comme une horloge $\leadsto$ pas scalable.
  - Solution: Dynamique mais *très difficile avec APIs classiques*.
** Nouvelle approche: paradigme de tâches
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.55\linewidth}
#+END_LaTeX
- Nouvelle abstraction: les tâches
  - *Plus besoin de se soucier de la ressource* sur laquelle le
    traitement est effectué
  - Exprimer calcul en terme *graphe de tâches* $\leadsto$ plus de
    *souplesse* et une meilleure *portabilité*

#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
      \includegraphics[width=.7\linewidth]{../Img/task_graph.pdf}%
    \end{column}
  \end{columns}
#+END_LaTeX

- Librairie StarPU:
  - Un runtime développé au LaBRI (RUNTIME/STORM).
  - Graphe de dépendances $\leadsto$ ordonnancemment *dynamique et opportuniste*
  - Première version pour système hybrique et récémment StarPU MPI 
- *Problèmatique* : Performances difficiles à évaluer car exécution du
  flot de contrôle non déterministe
  - Configuration *runtime*, heuristique d'ordonnancement
  - Configuration *application*, découpage en tâches
** Évaluation des performances en HPC: grandes approches
*** Test sur systèmes réels
- Exécution réelle sur la plateforme cible $\leadsto$ *coûteux,
  difficulté d'accès*
- Exécution *non déterministe* nécessite de réaliser beaucoup
  d'expériences $\leadsto$ extrapolations difficiles 
*** Simulation : Généralités
- Utilisation de *modèles* pour *prédire* comportements
- Permet *s'affranchir de la plateforme* $\leadsto$ *peu coûteux*
- Extrapolation simplifiée / simulation très rapide

** Simulation: 2 possibilités
*** Simulation par rejeu de trace
Pas adapté ici car *flot de contrôle non déterministe*
*** Hybride simulation / émulation
- Simulation réaliste $\leadsto$ *exécuter vrai code*
- Simuler *plate-forme et OS*.
- Émuler de l'*application*. 
SimGrid simulateur de systèmes distribués, grilles de calculs,
systèmes peer to peer et cloud. 

StarPU SimGrid, approche simulation / émulation mais avec  *un seul
noeud*. 
* Analyse du problème
** SimGrid: Généralités
   #+BEGIN_LaTeX
   \begin{figure}
   \centering
   \vspace{-4.5mm}
   \includegraphics[width=\linewidth]{../Img/Simgrid.pdf}
   \end{figure}
   #+END_LaTeX

** Construction de l'application MPI simulée
   #+BEGIN_LaTeX
   \begin{figure}
   \centering
   \vspace{-3.5mm}
   \includegraphics[width=\linewidth]{./Slides/Compilev2.pdf}
   \end{figure}
   #+END_LaTeX

** Privatisation du segment data
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.45\linewidth}
#+END_LaTeX
- Dans SimGrid les *processus* sont *modélisés par des threads* $\leadsto$
  espace adressage partagé.
- MPI environnment à *mémoire distribuée*.
- Mécanisme de privatisation: *ségment virtuel* (mmap)
  

#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.45\linewidth}
      \includegraphics[width=\linewidth]{../Img/Memoire.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

** StarPU MSG 
- Première version StarPU $\leadsto$ hybride
- Basé sur *MSG* car *modèle de performance plus proche* (communications,
  environnement mémoire partagé), CPUs GPUs.
- Émulation: le vrai code de l'ordonnanceur de StarPU et de
  l'application sont exécutés
- Simulation: calculs, allocations mémoire des tâches, transfert
  CUDA.
** StarPU SMPI: Difficultés de mise en oeuvre
- Besoin de 2 modèles de programmation différents à la fois:
  - StarPU intra noeuds: mémoire partagée $\leadsto$ MSG, partage
  - StarPU inter noeuds: mémoire distribuée $\leadsto$ SMPI, privatisation

- Besoin de 2 modèles de performance différents à la fois:
  - StarPU intra noeuds: CPU-GPU $\leadsto$ MSG ad hoc
  - StarPU inter noeuds: réseau $\leadsto$ SMPI
  Besoin de modifications un peu complexes dans SURF $\leadsto$ pas
  dans le cadre de ce stage.
- MSG et SMPI normalement pas utilisés ensemble $\leadsto$ initialiser
  correctement les 2. 
#+BEGIN_LaTeX
\vspace{-3.5mm}
  \begin{columns}[]
    \begin{column}{.55\linewidth}
#+END_LaTeX
- Problème des bibliothèques dynamiques.  
#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
   \includegraphics[width=.7\linewidth]{../Img/Dyn.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

* Méthodologie
** Techniques et étude de l'existant
*** Prise en main
- Dépôt git submobules:
  - StarPU SMPI:
    - SimGrid
    - StarPU
- *Suivi*:
  - Cahier de laboratoire org mode github.
- *Compréhension*:
  - Documentation.
  - SimgGrid = *106 350 lignes* de codes.
  - StarPU = *172 251 lignes* de codes.
  - "*Code mining*" et vérifications: GDB, Valgrind.
*** Validation
- Test simple: Modèle simplifié de StarPU MPI $\leadsto$ isoler problèmes.
- Test StarPU: MPI, Cholesky $\leadsto$ valider modifications
* Contribution
** Modification de SimGrid
- Initialisation MSG + SMPI
- Gestion du segment data: les processus MSG créés par un processus
  SMPI "héritent" du segment de leur père.
   #+BEGIN_LaTeX
   \begin{figure}[tbh]
   \centering
   \vspace{-1.5mm}
      \includegraphics[height=.7\paperheight]{../Img/Processus.pdf}
   \end{figure}
   #+END_LaTeX

** Librairie dynamiques et modifications StarPU
#+BEGIN_LaTeX
  \begin{columns}
    \begin{column}{.6\linewidth}
#+END_LaTeX

- Librairies dynamiques:
  - Utilisation librairies statiques.
- Modification StarPU:
  - Initialisation, car privatisation tardive.
#+BEGIN_LaTeX
    \end{column}
    \begin{column}{.35\linewidth}
      \includegraphics[width=\linewidth]{../Img/StaticDyn.pdf}
    \end{column}
  \end{columns}
#+END_LaTeX

* Conclusion
** Pour conclure
*** Bilan
- *StarPU + SimGrid modifié* pour simuler StarPU MPI
- Difficulté: apporter *modifications minimes* dans un code *non
  trivial*. Environ 20 lignes sur un total de plus de 270 000
*** Prochaine étape
- *Simulations et mesures* avec solveur d'algèbre linéaire
- *Vérifications système réel*: Grid5000
- stabiliser le prototype (intégrer les modifications aux dépots
  principaux de StarPU et de SimGrid) 
  
** Fin
Merci pour votre attention.
