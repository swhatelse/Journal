/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/bin/smpicc  -g -Wall -static -I/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/contrib/benchmarking_code_block   test.c libtest.a   -lpthread -L. -ltest -L/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib -lsimgrid -o test
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c: Dans la fonction ‘nested’:
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:26:68: attention : implicit declaration of function ‘get_value’ [-Wimplicit-function-declaration]
   printf("worker %d, my rank from nested2 : %d, %d\n", id, myrank, get_value());
                                                                    ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c: Dans la fonction ‘starpu_init’:
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:109:17: attention : format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘msg_host_t {alias struct s_xbt_dictelm *}’ [-Wformat=]
  fprintf(stderr,"%d : my rank is %d %d\n", host, myrank, get_value());
                 ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:111:17: attention : format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘msg_host_t {alias struct s_xbt_dictelm *}’ [-Wformat=]
  fprintf(stderr,"%d : my rank is %d %d\n", host, myrank, get_value());
                 ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:87:23: attention : variable ‘process’ set but not used [-Wunused-but-set-variable]
         msg_process_t process;
                       ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c: Dans la fonction ‘application_main’:
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:119:19: attention : unused variable ‘size’ [-Wunused-variable]
         int rank, size;
                   ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:119:13: attention : unused variable ‘rank’ [-Wunused-variable]
         int rank, size;
             ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c: Dans la fonction ‘smpi_simulated_main_’:
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:143:2: attention : implicit declaration of function ‘set_value’ [-Wimplicit-function-declaration]
  set_value(rank);
  ^
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c: Dans la fonction ‘application_main’:
/home/steven/Programmation/TER/starpu-simgrid/src/starpu-mpi/test.c:127:1: attention : contrôle a atteint la fin non void de la fonction [-Wreturn-type]
 }
 ^
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info.part.4 »:
(.text+0x1662): référence indéfinie vers « pthread_mutex_lock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info_bases »:
(.text+0x16e7): référence indéfinie vers « pthread_mutex_lock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info_table_bases »:
(.text+0x17bb): référence indéfinie vers « pthread_mutex_lock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __deregister_frame_info_bases »:
(.text+0x185e): référence indéfinie vers « pthread_mutex_lock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __deregister_frame_info_bases »:
(.text+0x18e6): référence indéfinie vers « pthread_mutex_unlock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « _Unwind_Find_FDE »:
(.text+0x19c6): référence indéfinie vers « pthread_mutex_lock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « _Unwind_Find_FDE »:
(.text+0x1a16): référence indéfinie vers « pthread_mutex_unlock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « _Unwind_Find_FDE »:
(.text+0x1b00): référence indéfinie vers « pthread_mutex_unlock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info.part.4 »:
(.text+0x1681): référence indéfinie vers « pthread_mutex_unlock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info_bases »:
(.text+0x1706): référence indéfinie vers « pthread_mutex_unlock »
/usr/lib/gcc/x86_64-unknown-linux-gnu/5.1.0/libgcc_eh.a(unwind-dw2-fde-dip.o): dans la fonction « __register_frame_info_table_bases »:
(.text+0x17da): référence indéfinie vers « pthread_mutex_unlock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « StorageModel::~StorageModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_interface.cpp:46: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « StorageModel::~StorageModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_interface.cpp:46: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « Storage::~Storage() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_interface.cpp:91: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « Storage::~Storage() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_interface.cpp:91: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception::~exception() »:
/usr/include/boost/exception/exception.hpp:284: référence indéfinie vers « operator delete(void*) »
/usr/include/boost/exception/exception.hpp:281: référence indéfinie vers « __cxa_call_unexpected »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception::~exception() »:
/usr/include/boost/exception/exception.hpp:284: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_base::~clone_base() »:
/usr/include/boost/exception/exception.hpp:408: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_base::~clone_base() »:
/usr/include/boost/exception/exception.hpp:408: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::bad_function_call::bad_function_call() »:
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::allocator<char>::allocator() »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::runtime_error::runtime_error(std::string const&) »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::allocator<char>::~allocator() »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/boost/function/function_base.hpp:734: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_base::~sp_counted_base() »:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:115: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_base::~sp_counted_base() »:
/usr/include/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:115: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal_base::~signal_base() »:
/usr/include/boost/signals2/signal_base.hpp:26: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal_base::~signal_base() »:
/usr/include/boost/signals2/signal_base.hpp:26: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::mutex::mutex() »:
/usr/include/boost/signals2/detail/lwm_pthreads.hpp:49: référence indéfinie vers « pthread_mutex_init »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::mutex::~mutex() »:
/usr/include/boost/signals2/detail/lwm_pthreads.hpp:55: référence indéfinie vers « pthread_mutex_destroy »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::mutex::lock() »:
/usr/include/boost/signals2/detail/lwm_pthreads.hpp:60: référence indéfinie vers « pthread_mutex_lock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::mutex::unlock() »:
/usr/include/boost/signals2/detail/lwm_pthreads.hpp:70: référence indéfinie vers « pthread_mutex_unlock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::exception::exception(std::exception const&) »:
/usr/include/c++/5.1.0/exception:60: référence indéfinie vers « vtable for std::exception »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::runtime_error::runtime_error(std::runtime_error const&) »:
/usr/include/c++/5.1.0/stdexcept:192: référence indéfinie vers « vtable for std::runtime_error »
/usr/include/c++/5.1.0/stdexcept:192: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) »
/usr/include/c++/5.1.0/stdexcept:192: référence indéfinie vers « std::exception::~exception() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::signal1(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::signal1_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> >::deallocate(boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>* std::__uninitialized_copy<false>::__uninit_copy<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*>(boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*) »:
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:81: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::optional_last_value<void> >(boost::signals2::optional_last_value<void>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Storage*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::optional_last_value<void> >(boost::signals2::optional_last_value<void>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::variant::backup_holder<boost::shared_ptr<void> >::~backup_holder() »:
/usr/include/boost/variant/detail/backup_holder.hpp:33: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::variant::backup_holder<boost::signals2::detail::foreign_void_shared_ptr>::~backup_holder() »:
/usr/include/boost/variant/detail/backup_holder.hpp:33: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::bad_function_call::~bad_function_call() »:
/usr/include/boost/function/function_base.hpp:731: référence indéfinie vers « std::runtime_error::~runtime_error() »
/usr/include/boost/function/function_base.hpp:731: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::bad_function_call::~bad_function_call() »:
/usr/include/boost/function/function_base.hpp:731: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::throw_exception<boost::bad_function_call>(boost::bad_function_call const&) »:
/usr/include/boost/throw_exception.hpp:69: référence indéfinie vers « __cxa_allocate_exception »
/usr/include/boost/throw_exception.hpp:69: référence indéfinie vers « __cxa_throw »
/usr/include/boost/throw_exception.hpp:69: référence indéfinie vers « __cxa_free_exception »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « void boost::multi_index::detail::scope_guard_impl_base::safe_execute<boost::multi_index::detail::obj_scope_guard_impl2<boost::signals2::detail::auto_buffer<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, boost::signals2::detail::store_n_objects<10u>, boost::signals2::detail::default_grow_policy, std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > >, void (boost::signals2::detail::auto_buffer<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, boost::signals2::detail::store_n_objects<10u>, boost::signals2::detail::default_grow_policy, std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > >::*)(boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long), boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long> >(boost::multi_index::detail::obj_scope_guard_impl2<boost::signals2::detail::auto_buffer<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, boost::signals2::detail::store_n_objects<10u>, boost::signals2::detail::default_grow_policy, std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > >, void (boost::signals2::detail::auto_buffer<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, boost::signals2::detail::store_n_objects<10u>, boost::signals2::detail::default_grow_policy, std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > >::*)(boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long), boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long>&) »:
/usr/include/boost/multi_index/detail/scope_guard.hpp:85: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/multi_index/detail/scope_guard.hpp:85: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector() »:
/usr/include/boost/exception/exception.hpp:338: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::error_info_injector<boost::bad_function_call>::~error_info_injector() »:
/usr/include/boost/exception/exception.hpp:338: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::~clone_impl() »:
/usr/include/boost/exception/exception.hpp:459: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::~clone_impl() »:
/usr/include/boost/exception/exception.hpp:459: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Storage*, boost::function<void (Storage*)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE[_ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE]+0x28): référence indéfinie vers « std::runtime_error::what() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE[_ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE]+0x20): référence indéfinie vers « std::runtime_error::what() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, StorageAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Storage*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::optional_last_value<void> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV7Storage[_ZTV7Storage]+0x48): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV7Storage[_ZTV7Storage]+0x50): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV7Storage[_ZTV7Storage]+0x58): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV7Storage[_ZTV7Storage]+0x60): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV12StorageModel[_ZTV12StorageModel]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTV12StorageModel[_ZTV12StorageModel]+0x80): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, StorageAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Storage*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Storage*), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Storage*)>, boost::function<void (boost::signals2::connection const&, Storage*)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):/usr/include/boost/signals2/preprocessed_signal.hpp:41: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost8signals211signal_baseE[_ZTVN5boost8signals211signal_baseE]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost6detail15sp_counted_baseE[_ZTVN5boost6detail15sp_counted_baseE]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost6detail15sp_counted_baseE[_ZTVN5boost6detail15sp_counted_baseE]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost6detail15sp_counted_baseE[_ZTVN5boost6detail15sp_counted_baseE]+0x38): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost17bad_function_callE[_ZTVN5boost17bad_function_callE]+0x20): référence indéfinie vers « std::runtime_error::what() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost16exception_detail10clone_baseE[_ZTVN5boost16exception_detail10clone_baseE]+0x10): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost16exception_detail10clone_baseE[_ZTVN5boost16exception_detail10clone_baseE]+0x18): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost9exceptionE[_ZTVN5boost9exceptionE]+0x10): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTVN5boost9exceptionE[_ZTVN5boost9exceptionE]+0x18): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE[_ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE[_ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP13StorageAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP13StorageAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7Storage23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP7Storage23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIvEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP7StorageNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP7StorageNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP13StorageAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP13StorageAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7Storage23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP7Storage23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): encore plus de références indéfinies suivent vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP13StorageAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP13StorageAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP7Storage23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP7Storage23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP7Storage23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP7Storage23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP7StorageENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP7StorageENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal1IvP7StorageNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal1IvP7StorageNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTI13StorageAction[_ZTI13StorageAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTI7Storage[_ZTI7Storage]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTI12StorageModel[_ZTI12StorageModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals211signal_baseE[_ZTIN5boost8signals211signal_baseE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals212expired_slotE[_ZTIN5boost8signals212expired_slotE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost6detail15sp_counted_baseE[_ZTIN5boost6detail15sp_counted_baseE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost12bad_weak_ptrE[_ZTIN5boost12bad_weak_ptrE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost12bad_weak_ptrE[_ZTIN5boost12bad_weak_ptrE]+0x10): référence indéfinie vers « typeinfo for std::exception »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost17bad_function_callE[_ZTIN5boost17bad_function_callE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost17bad_function_callE[_ZTIN5boost17bad_function_callE]+0x10): référence indéfinie vers « typeinfo for std::runtime_error »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost16exception_detail10clone_baseE[_ZTIN5boost16exception_detail10clone_baseE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost9exceptionE[_ZTIN5boost9exceptionE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::clone() const »:
/usr/include/boost/exception/exception.hpp:466: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/exception/exception.hpp:466: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o): dans la fonction « boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::bad_function_call> >::rethrow() const »:
/usr/include/boost/exception/exception.hpp:472: référence indéfinie vers « __cxa_allocate_exception »
/usr/include/boost/exception/exception.hpp:472: référence indéfinie vers « __cxa_throw »
/usr/include/boost/exception/exception.hpp:472: référence indéfinie vers « __cxa_free_exception »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost8signals26detail19std_functional_baseE[_ZTIN5boost8signals26detail19std_functional_baseE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.rodata._ZTIN5boost12noncopyable_11noncopyableE[_ZTIN5boost12noncopyable_11noncopyableE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_interface.cpp.o):(.eh_frame+0x8b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_c_bindings.cpp.o):(.eh_frame+0xf7f): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « Model::Model(char const*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:497: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:498: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:499: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:500: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:497: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:498: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:500: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « Model::~Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:509: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_interface.cpp:510: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::signal0<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::signal0(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::signal0<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::~signal0() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::signal0<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::~signal0() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::signal0_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex> >(boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex> >(boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTV8Resource[_ZTV8Resource]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTV8Resource[_ZTV8Resource]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTV5Model[_ZTV5Model]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::signal<void (), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o): dans la fonction « boost::signals2::signal<void (), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal0_implIvNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS9_IFvRKNS2_10connectionEEEENS2_5mutexEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvvENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS2_EENS7_IFvRKNS0_10connectionEEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEEE[_ZTIN5boost8signals27signal0IvNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvvEEENS6_IFvRKNS0_10connectionEEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTI6Action[_ZTI6Action]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTI8Resource[_ZTI8Resource]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTI5Model[_ZTI5Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive14list_base_hookIvvvEE[_ZTIN5boost9intrusive14list_base_hookIvvvEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive14list_base_hookINS0_3tagI6lmmTagEEvvEE[_ZTIN5boost9intrusive14list_base_hookINS0_3tagI6lmmTagEEvvEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEENS0_7dft_tagELNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE[_ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEENS0_7dft_tagELNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE6lmmTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE[_ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE6lmmTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEENS0_7dft_tagELNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj1EEE[_ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEENS0_7dft_tagELNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEENS0_7dft_tagELj1EEE[_ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEENS0_7dft_tagELj1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEE6lmmTagLj1EEE[_ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEE6lmmTagLj1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE6lmmTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj0EEE[_ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE6lmmTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj0EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.rodata._ZTIN5boost9intrusive9list_nodeIPvEE[_ZTIN5boost9intrusive9list_nodeIPvEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_interface.cpp.o):(.eh_frame+0xeb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « parse_S_host(s_sg_platf_host_cbarg_t*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.cpp:163: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « parse_S_router(s_sg_platf_router_cbarg_t*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.cpp:207: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « routing_AS_begin »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.cpp:383: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « routing_model_create »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.cpp:672: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « routing_exit »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.cpp:1328: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « RoutingEdge::~RoutingEdge() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:100: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « RoutingEdge::~RoutingEdge() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:100: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « RoutingEdgeImpl::~RoutingEdgeImpl() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:113: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o): dans la fonction « RoutingEdgeImpl::~RoutingEdgeImpl() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:113: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x38): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x40): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTV11RoutingEdge[_ZTV11RoutingEdge]+0x48): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTI15RoutingEdgeImpl[_ZTI15RoutingEdgeImpl]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing.cpp.o):(.rodata._ZTI11RoutingEdge[_ZTI11RoutingEdge]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster.cpp.o): dans la fonction « model_cluster_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster.cpp:17: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster.cpp:17: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster.cpp.o): dans la fonction « AsCluster::~AsCluster() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster.hpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster.cpp.o): dans la fonction « AsCluster::~AsCluster() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster.hpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster.cpp.o):(.rodata._ZTI9AsCluster[_ZTI9AsCluster]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster.cpp.o):(.eh_frame+0x4b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « model_fat_tree_cluster_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:14: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:14: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::~AsClusterFatTree() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:26: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:28: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::~AsClusterFatTree() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:28: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::create_links() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:151: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:153: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:153: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:153: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:154: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:154: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:154: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:156: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:156: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:156: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:156: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:158: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:158: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:158: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::allocator<char>::allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:160: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:163: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:163: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:163: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:163: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:164: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:164: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:166: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:166: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:166: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:151: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:182: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:183: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:185: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:185: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:185: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:186: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:186: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:188: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:188: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:188: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:182: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:158: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:159: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:166: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:151: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:188: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:182: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::areRelated(FatTreeNode*, FatTreeNode*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:222: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:225: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:225: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:225: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:225: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:225: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:226: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:226: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:229: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:229: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:231: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:233: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:233: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:233: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:233: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:234: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:234: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:234: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:236: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:236: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:238: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:239: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:240: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:240: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:240: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:222: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:240: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:222: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::generateSwitches() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:296: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:296: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::generateLabels() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:327: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:329: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:331: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:331: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::ostream::operator<<(unsigned int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:333: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:335: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:335: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:335: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:327: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:343: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:343: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:335: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:327: référence indéfinie vers « std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::addProcessingNode(int) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:384: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:384: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::addLink(FatTreeNode*, unsigned int, FatTreeNode*, unsigned int) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:395: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:395: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::parse_specific_arguments(s_sg_platf_cluster_cbarg*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:422: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:431: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:441: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:452: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « AsClusterFatTree::generateDotFile(std::string const&) const »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:459: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:463: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:463: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:465: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::is_open() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:466: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:468: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:470: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:473: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:478: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:479: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:480: référence indéfinie vers « std::ostream::operator<<(int) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:481: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:483: référence indéfinie vers « std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:484: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::close() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:487: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:488: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:459: référence indéfinie vers « std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « FatTreeLink::FatTreeLink(s_sg_platf_cluster_cbarg*, FatTreeNode*, FatTreeNode*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:539: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::allocator<char>::allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::string::operator=(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:542: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::allocator<char>::allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::string::operator=(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:546: référence indéfinie vers « std::string::c_str() const »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:539: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:541: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:545: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_fat_tree.cpp:539: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __static_initialization_and_destruction_0(int, int) »:
/usr/include/c++/5.1.0/iostream:74: référence indéfinie vers « std::ios_base::Init::Init() »
/usr/include/c++/5.1.0/iostream:74: référence indéfinie vers « std::ios_base::Init::~Init() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<char const*>(char const*, char const*, std::allocator<char> const&) »:
/usr/include/c++/5.1.0/bits/basic_string.tcc:673: référence indéfinie vers « std::string::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::algorithm::detail::is_any_ofF<char>::~is_any_ofF() »:
/usr/include/boost/algorithm/string/detail/classification.hpp:137: référence indéfinie vers « operator delete[](void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::algorithm::detail::is_any_ofF<char>::is_any_ofF(boost::algorithm::detail::is_any_ofF<char> const&) »:
/usr/include/boost/algorithm/string/detail/classification.hpp:123: référence indéfinie vers « operator new[](unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) »:
/usr/include/c++/5.1.0/bits/basic_string.h:4818: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) »
/usr/include/c++/5.1.0/bits/basic_string.h:4819: référence indéfinie vers « std::string::append(char const*) »
/usr/include/c++/5.1.0/bits/basic_string.h:4820: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<FatTreeNode*, std::allocator<FatTreeNode*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FatTreeNode**, std::vector<FatTreeNode*, std::allocator<FatTreeNode*> > >, FatTreeNode* const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:390: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<FatTreeLink*, std::allocator<FatTreeLink*> >::_M_insert_aux(__gnu_cxx::__normal_iterator<FatTreeLink**, std::vector<FatTreeLink*, std::allocator<FatTreeLink*> > >, FatTreeLink* const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:390: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<char const*> >(boost::iterator_range<char const*> const&) »:
/usr/include/boost/algorithm/string/detail/classification.hpp:97: référence indéfinie vers « operator new[](unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<unsigned int, std::allocator<unsigned int> >::_M_insert_aux(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:390: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned long, unsigned int const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:513: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:523: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:513: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<FatTreeLink*, std::allocator<FatTreeLink*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<FatTreeLink**, std::vector<FatTreeLink*, std::allocator<FatTreeLink*> > >, unsigned long, FatTreeLink* const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:513: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:523: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:513: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<FatTreeNode*, std::allocator<FatTreeNode*> >::_M_check_len(unsigned long, char const*) const »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1425: référence indéfinie vers « std::__throw_length_error(char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<int const, FatTreeNode*> > std::_Rb_tree<int, std::pair<int const, FatTreeNode*>, std::_Select1st<std::pair<int const, FatTreeNode*> >, std::less<int>, std::allocator<std::pair<int const, FatTreeNode*> > >::_M_insert_<std::_Rb_tree<int, std::pair<int const, FatTreeNode*>, std::_Select1st<std::pair<int const, FatTreeNode*> >, std::less<int>, std::allocator<std::pair<int const, FatTreeNode*> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, FatTreeNode*> const&, std::_Rb_tree<int, std::pair<int const, FatTreeNode*>, std::_Select1st<std::pair<int const, FatTreeNode*> >, std::less<int>, std::allocator<std::pair<int const, FatTreeNode*> > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<FatTreeLink*, std::allocator<FatTreeLink*> >::_M_check_len(unsigned long, char const*) const »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1425: référence indéfinie vers « std::__throw_length_error(char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<unsigned int, std::allocator<unsigned int> >::_M_check_len(unsigned long, char const*) const »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1425: référence indéfinie vers « std::__throw_length_error(char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) »:
/usr/include/c++/5.1.0/bits/basic_string.tcc:572: référence indéfinie vers « std::allocator<char>::allocator() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:572: référence indéfinie vers « std::allocator<char>::~allocator() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:573: référence indéfinie vers « std::string::_S_empty_rep() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:573: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:577: référence indéfinie vers « std::__throw_logic_error(char const*) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:582: référence indéfinie vers « std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:584: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:584: référence indéfinie vers « std::string::_S_copy_chars(char*, char const*, char const*) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:590: référence indéfinie vers « std::string::_Rep::_M_set_length_and_sharable(unsigned long) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:591: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:585: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/basic_string.tcc:587: référence indéfinie vers « std::string::_Rep::_M_destroy(std::allocator<char> const&) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:588: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/basic_string.tcc:585: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « unsigned int* std::vector<unsigned int, std::allocator<unsigned int> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(unsigned long, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1231: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_vector.h:1234: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_vector.h:1231: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<int const, FatTreeNode*> >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<FatTreeNode*>::deallocate(FatTreeNode**, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<FatTreeLink*>::deallocate(FatTreeLink**, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<FatTreeNode*>::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<FatTreeLink*>::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::string>::deallocate(std::string*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void std::_Destroy<std::string>(std::string*) »:
/usr/include/c++/5.1.0/bits/stl_construct.h:93: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, char const*>, boost::algorithm::split_iterator<char const*>, boost::iterators::use_default, boost::iterators::use_default> >(boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, char const*>, boost::algorithm::split_iterator<char const*>, boost::iterators::use_default, boost::iterators::use_default>, boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, char const*>, boost::algorithm::split_iterator<char const*>, boost::iterators::use_default, boost::iterators::use_default>, std::input_iterator_tag) »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1276: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/c++/5.1.0/bits/stl_vector.h:1276: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void std::vector<std::string, std::allocator<std::string> >::_M_range_initialize<boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, __gnu_cxx::__normal_iterator<char*, std::string> >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::string> >, boost::iterators::use_default, boost::iterators::use_default> >(boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, __gnu_cxx::__normal_iterator<char*, std::string> >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::string> >, boost::iterators::use_default, boost::iterators::use_default>, boost::iterators::transform_iterator<boost::algorithm::detail::copy_iterator_rangeF<std::string, __gnu_cxx::__normal_iterator<char*, std::string> >, boost::algorithm::split_iterator<__gnu_cxx::__normal_iterator<char*, std::string> >, boost::iterators::use_default, boost::iterators::use_default>, std::input_iterator_tag) »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1276: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/c++/5.1.0/bits/stl_vector.h:1276: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<unsigned int>::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, FatTreeNode*> > >::deallocate(std::_Rb_tree_node<std::pair<int const, FatTreeNode*> >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<std::string, std::allocator<std::string> >::_M_insert_aux(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&) »:
/usr/include/c++/5.1.0/bits/vector.tcc:337: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) »
/usr/include/c++/5.1.0/bits/vector.tcc:343: référence indéfinie vers « std::string::operator=(std::string const&) »
/usr/include/c++/5.1.0/bits/vector.tcc:337: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/c++/5.1.0/bits/vector.tcc:337: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/vector.tcc:390: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/vector.tcc:382: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<int const, FatTreeNode*> > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::string>::construct(std::string*, std::string const&) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:130: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::vector<std::string, std::allocator<std::string> >::_M_check_len(unsigned long, char const*) const »:
/usr/include/c++/5.1.0/bits/stl_vector.h:1425: référence indéfinie vers « std::__throw_length_error(char const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::detail::function::functor_manager<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::manager(boost::detail::function::function_buffer const&, boost::detail::function::function_buffer&, boost::detail::function::functor_manager_operation_type, mpl_::bool_<false>) »:
/usr/include/boost/function/function_base.hpp:380: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/function/function_base.hpp:389: référence indéfinie vers « operator delete(void*) »
/usr/include/boost/function/function_base.hpp:380: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void boost::detail::function::basic_vtable2<boost::iterator_range<char const*>, char const*, char const*>::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >(boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::detail::function::function_buffer&, mpl_::bool_<false>) const »:
/usr/include/boost/function/function_template.hpp:586: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/function/function_template.hpp:586: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::string>::destroy(std::string*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:133: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::range_iterator<std::string, void>::type boost::range_detail::range_begin<std::string>(std::string&) »:
/usr/include/boost/range/begin.hpp:47: référence indéfinie vers « std::string::begin() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « boost::range_iterator<std::string, void>::type boost::range_detail::range_end<std::string>(std::string&) »:
/usr/include/boost/range/end.hpp:48: référence indéfinie vers « std::string::end() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void boost::detail::function::basic_vtable2<boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> >, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string> >::assign_functor<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >(boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >, boost::detail::function::function_buffer&, mpl_::bool_<false>) const »:
/usr/include/boost/function/function_template.hpp:586: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/function/function_template.hpp:586: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::string>::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::string boost::copy_range<std::string, boost::iterator_range<char const*> >(boost::iterator_range<char const*> const&) »:
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::allocator() »
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::~allocator() »
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::string boost::copy_range<std::string, boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> > >(boost::iterator_range<__gnu_cxx::__normal_iterator<char*, std::string> > const&) »:
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::allocator() »
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::~allocator() »
/usr/include/boost/range/iterator_range_core.hpp:873: référence indéfinie vers « std::allocator<char>::~allocator() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::string* std::__copy_move_backward<false, false, std::random_access_iterator_tag>::__copy_move_b<std::string*, std::string*>(std::string*, std::string*, std::string*) »:
/usr/include/c++/5.1.0/bits/stl_algobase.h:547: référence indéfinie vers « std::string::operator=(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::string* std::__uninitialized_copy<false>::__uninit_copy<std::string*, std::string*>(std::string*, std::string*, std::string*) »:
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:81: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&) »:
/usr/include/c++/5.1.0/bits/basic_string.tcc:673: référence indéfinie vers « std::string::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « void std::_Construct<std::string, std::string>(std::string*, std::string const&) »:
/usr/include/c++/5.1.0/bits/stl_construct.h:83: référence indéfinie vers « std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o): dans la fonction « char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char*, std::string> >(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>, std::allocator<char> const&, std::forward_iterator_tag) »:
/usr/include/c++/5.1.0/bits/basic_string.tcc:572: référence indéfinie vers « std::allocator<char>::allocator() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:572: référence indéfinie vers « std::allocator<char>::~allocator() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:573: référence indéfinie vers « std::string::_S_empty_rep() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:573: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:577: référence indéfinie vers « std::__throw_logic_error(char const*) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:582: référence indéfinie vers « std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:584: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:584: référence indéfinie vers « std::string::_S_copy_chars(char*, __gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:590: référence indéfinie vers « std::string::_Rep::_M_set_length_and_sharable(unsigned long) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:591: référence indéfinie vers « std::string::_Rep::_M_refdata() »
/usr/include/c++/5.1.0/bits/basic_string.tcc:585: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/basic_string.tcc:587: référence indéfinie vers « std::string::_Rep::_M_destroy(std::allocator<char> const&) »
/usr/include/c++/5.1.0/bits/basic_string.tcc:588: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/basic_string.tcc:585: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o):(.rodata._ZTIN5boost9algorithm6detail13token_finderFINS1_10is_any_ofFIcEEEE[_ZTIN5boost9algorithm6detail13token_finderFINS1_10is_any_ofFIcEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o):(.rodata._ZTI16AsClusterFatTree[_ZTI16AsClusterFatTree]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_fat_tree.cpp.o):(.eh_frame+0x12b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_torus.cpp.o): dans la fonction « model_torus_cluster_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_torus.cpp:28: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_torus.cpp:28: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_torus.cpp.o): dans la fonction « AsClusterTorus::~AsClusterTorus() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_torus.cpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_torus.cpp.o): dans la fonction « AsClusterTorus::~AsClusterTorus() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_cluster_torus.cpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_torus.cpp.o):(.rodata._ZTI14AsClusterTorus[_ZTI14AsClusterTorus]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_cluster_torus.cpp.o):(.eh_frame+0xaf): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o): dans la fonction « model_dijkstra_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:42: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:42: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o): dans la fonction « model_dijkstracache_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:46: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:46: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o): dans la fonction « AsDijkstra::getOnelinkRoutes() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:197: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:199: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:201: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o): dans la fonction « AsDijkstra::~AsDijkstra() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:406: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o): dans la fonction « AsDijkstra::~AsDijkstra() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_dijkstra.cpp:406: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o):(.rodata._ZTI10AsDijkstra[_ZTI10AsDijkstra]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_dijkstra.cpp.o):(.eh_frame+0x10b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o): dans la fonction « model_floyd_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:18: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:18: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o): dans la fonction « AsFloyd::~AsFloyd() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:46: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o): dans la fonction « AsFloyd::~AsFloyd() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:46: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o): dans la fonction « AsFloyd::getOneLinkRoutes() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:69: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:71: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_floyd.cpp:73: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o):(.rodata._ZTI7AsFloyd[_ZTI7AsFloyd]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_floyd.cpp.o):(.eh_frame+0xab): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o): dans la fonction « model_full_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:20: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:20: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o): dans la fonction « AsFull::~AsFull() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:70: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o): dans la fonction « AsFull::~AsFull() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:70: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o): dans la fonction « AsFull::getOneLinkRoutes() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:91: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:93: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_full.cpp:95: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o):(.rodata._ZTI6AsFull[_ZTI6AsFull]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_full.cpp.o):(.eh_frame+0xab): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_generic.cpp.o): dans la fonction « AsGeneric::~AsGeneric() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_generic.cpp:43: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_generic.cpp.o): dans la fonction « AsGeneric::~AsGeneric() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_generic.cpp:43: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_generic.cpp.o):(.rodata._ZTI9AsGeneric[_ZTI9AsGeneric]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_generic.cpp.o):(.eh_frame+0xff): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o): dans la fonction « model_none_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_none.cpp:13: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_none.cpp:13: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o): dans la fonction « AsNone::~AsNone() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_none.cpp:71: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o): dans la fonction « AsNone::~AsNone() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_none.cpp:71: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o): dans la fonction « As::~As() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:67: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o): dans la fonction « As::~As() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:67: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x38): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x40): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTV2As[_ZTV2As]+0x48): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTI6AsNone[_ZTI6AsNone]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.rodata._ZTI2As[_ZTI2As]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_none.cpp.o):(.eh_frame+0xab): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o): dans la fonction « model_vivaldi_create() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_vivaldi.cpp:23: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_vivaldi.cpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o): dans la fonction « AsVivaldi::getRouteAndLatency(RoutingEdge*, RoutingEdge*, s_sg_platf_route_cbarg*, double*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_vivaldi.cpp:95: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o): dans la fonction « AsVivaldi::~AsVivaldi() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_vivaldi.hpp:30: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o): dans la fonction « AsVivaldi::~AsVivaldi() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing_vivaldi.hpp:30: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o):(.rodata._ZTI9AsVivaldi[_ZTI9AsVivaldi]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(surf_routing_vivaldi.cpp.o):(.eh_frame+0xcb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(trace_mgr.c.o): dans la fonction « tmgr_event_generator_next_value »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/trace_mgr.c:240: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/trace_mgr.c:245: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/trace_mgr.c:245: référence indéfinie vers « pow »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « surf_vm_workstation_model_init_HL13 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:14: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:14: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13Model::createWorkstationVM(char const*, s_xbt_dictelm*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:43: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:43: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13::WorkstationVMHL13(WorkstationVMModel*, char const*, s_xbt_dict*, s_xbt_dictelm*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:236: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13::~WorkstationVMHL13() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:283: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13::~WorkstationVMHL13() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:283: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13::migrate(s_xbt_dictelm*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.cpp:351: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « RoutingEdgeWrapper::~RoutingEdgeWrapper() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:131: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « RoutingEdgeWrapper::~RoutingEdgeWrapper() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/surf_routing.hpp:131: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMModel::~WorkstationVMModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_interface.hpp:67: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMModel::~WorkstationVMModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_interface.hpp:67: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o): dans la fonction « WorkstationVMHL13Model::~WorkstationVMHL13Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.hpp:32: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_hl13.hpp:32: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTV18WorkstationVMModel[_ZTV18WorkstationVMModel]+0x90): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTV18WorkstationVMModel[_ZTV18WorkstationVMModel]+0x98): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTV18WorkstationVMModel[_ZTV18WorkstationVMModel]+0xa0): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTI17WorkstationVMHL13[_ZTI17WorkstationVMHL13]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTI22WorkstationVMHL13Model[_ZTI22WorkstationVMHL13Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTI18WorkstationVMModel[_ZTI18WorkstationVMModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.rodata._ZTI18RoutingEdgeWrapper[_ZTI18RoutingEdgeWrapper]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_hl13.cpp.o):(.eh_frame+0x423): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « WorkstationVM::~WorkstationVM() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_interface.cpp:54: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « WorkstationVM::~WorkstationVM() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/vm_workstation_interface.cpp:54: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::signal1(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::signal1_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, WorkstationVM*, boost::function<void (WorkstationVM*)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal1_impl<void, WorkstationVM*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0x48): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0x50): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0xf8): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTV13WorkstationVM[_ZTV13WorkstationVM]+0x100): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (WorkstationVM*), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (WorkstationVM*), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationVM*)>, boost::function<void (boost::signals2::connection const&, WorkstationVM*)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP13WorkstationVMNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP13WorkstationVMNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP13WorkstationVMNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP13WorkstationVMNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP13WorkstationVMNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP13WorkstationVMNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP13WorkstationVMENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP13WorkstationVMENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal1IvP13WorkstationVMNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal1IvP13WorkstationVMNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.rodata._ZTI13WorkstationVM[_ZTI13WorkstationVM]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(vm_workstation_interface.cpp.o):(.eh_frame+0x8b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « surf_workstation_model_init_current_default »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:24: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:24: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « surf_workstation_model_init_compound »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:41: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « WorkstationCLM03Model::~WorkstationCLM03Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:55: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « WorkstationCLM03Model::~WorkstationCLM03Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:55: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « WorkstationCLM03Model::createWorkstation(char const*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:61: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.cpp:61: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « WorkstationCLM03::~WorkstationCLM03() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o): dans la fonction « WorkstationCLM03::~WorkstationCLM03() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_clm03.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o):(.rodata._ZTI16WorkstationCLM03[_ZTI16WorkstationCLM03]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o):(.rodata._ZTI21WorkstationCLM03Model[_ZTI21WorkstationCLM03Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_clm03.cpp.o):(.eh_frame+0x107): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « WorkstationModel::~WorkstationModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_interface.cpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « WorkstationModel::~WorkstationModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_interface.cpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « Workstation::~Workstation() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_interface.cpp:122: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « Workstation::~Workstation() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_interface.cpp:122: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::signal1(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::signal1_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Workstation*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Workstation*, boost::function<void (Workstation*)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV11Workstation[_ZTV11Workstation]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV11Workstation[_ZTV11Workstation]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV11Workstation[_ZTV11Workstation]+0x48): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV11Workstation[_ZTV11Workstation]+0x50): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV16WorkstationModel[_ZTV16WorkstationModel]+0x80): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTV16WorkstationModel[_ZTV16WorkstationModel]+0x90): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, WorkstationAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Workstation*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Workstation*), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Workstation*)>, boost::function<void (boost::signals2::connection const&, Workstation*)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):/usr/include/boost/signals2/preprocessed_signal.hpp:41: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP17WorkstationAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP17WorkstationAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP11Workstation23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP11Workstation23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP11WorkstationNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP11WorkstationNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP17WorkstationAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP17WorkstationAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP11Workstation23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP11Workstation23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP11WorkstationNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP11WorkstationNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE]+0x0): encore plus de références indéfinies suivent vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP17WorkstationAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP17WorkstationAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP11Workstation23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP11Workstation23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP11Workstation23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP11Workstation23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP11WorkstationENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP11WorkstationENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal1IvP11WorkstationNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal1IvP11WorkstationNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTI17WorkstationAction[_ZTI17WorkstationAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTI11Workstation[_ZTI11Workstation]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.rodata._ZTI16WorkstationModel[_ZTI16WorkstationModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_interface.cpp.o):(.eh_frame+0xcb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « surf_workstation_model_init_ptask_L07 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:42: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:42: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Model::WorkstationL07Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:53: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:54: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:54: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Model::~WorkstationL07Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:74: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Model::~WorkstationL07Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:74: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Model::executeParallelTask(int, void**, double*, double*, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:221: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:221: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Model::createWorkstation(char const*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:284: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:284: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « CpuL07Model::createCpu(char const*, xbt_dynar_s*, int, double, tmgr_trace*, int, e_surf_resource_state_t, tmgr_trace*, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:333: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:333: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « NetworkL07Model::createNetworkLink(char const*, double, tmgr_trace*, double, tmgr_trace*, e_surf_resource_state_t, tmgr_trace*, e_surf_link_sharing_policy_t, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:359: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:359: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Action::~WorkstationL07Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:631: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « WorkstationL07Action::~WorkstationL07Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/workstation_ptask_L07.cpp:631: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o): dans la fonction « NetworkModel::~NetworkModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.hpp:101: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.hpp:102: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.hpp:102: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI20WorkstationL07Action[_ZTI20WorkstationL07Action]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI7LinkL07[_ZTI7LinkL07]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI6CpuL07[_ZTI6CpuL07]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI14WorkstationL07[_ZTI14WorkstationL07]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI15NetworkL07Model[_ZTI15NetworkL07Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.rodata._ZTI11CpuL07Model[_ZTI11CpuL07Model]+0x0): encore plus de références indéfinies suivent vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(workstation_ptask_L07.cpp.o):(.eh_frame+0x2eb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(smpi_bench.c.o): dans la fonction « smpi_sample_3 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_bench.c:424: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(smpi_bench.c.o): dans la fonction « smpi_shared_malloc »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_bench.c:482: référence indéfinie vers « shm_open »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_bench.c:497: référence indéfinie vers « shm_unlink »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(smpi_topo.c.o): dans la fonction « getfactors »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_topo.c:512: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_topo.c:512: référence indéfinie vers « ceil »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_topo.c:513: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/smpi_topo.c:513: référence indéfinie vers « ceil »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « surf_cpu_model_init_Cas01 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:41: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:42: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:42: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01Model::CpuCas01Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:71: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:90: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:71: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01Model::~CpuCas01Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:102: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:106: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:107: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:107: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01Model::createCpu(char const*, xbt_dynar_s*, int, double, tmgr_trace*, int, e_surf_resource_state_t, tmgr_trace*, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:124: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:124: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01::~CpuCas01() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:195: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01::~CpuCas01() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:195: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01::execute(double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:288: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:288: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01::sleep(double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:301: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.cpp:301: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuAction::~CpuAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_interface.hpp:224: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuAction::~CpuAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_interface.hpp:224: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01Action::~CpuCas01Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.hpp:86: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o): dans la fonction « CpuCas01Action::~CpuCas01Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_cas01.hpp:86: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o):(.rodata._ZTI14CpuCas01Action[_ZTI14CpuCas01Action]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o):(.rodata._ZTI8CpuCas01[_ZTI8CpuCas01]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o):(.rodata._ZTI13CpuCas01Model[_ZTI13CpuCas01Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_cas01.cpp.o):(.eh_frame+0x2eb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « Cpu::~Cpu() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_interface.cpp:204: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « Cpu::~Cpu() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_interface.cpp:204: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::signal1(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::signal1_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x48): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x50): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x78): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTV3Cpu[_ZTV3Cpu]+0x80): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, Cpu*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o): dans la fonction « boost::signals2::signal<void (Cpu*), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):/usr/include/boost/signals2/preprocessed_signal.hpp:41: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP9CpuAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP9CpuAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP3Cpu23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP3Cpu23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP3CpuNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP3CpuNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP9CpuAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP9CpuAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP3Cpu23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP3Cpu23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP3CpuNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP3CpuNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE]+0x0): encore plus de références indéfinies suivent vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP9CpuAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP9CpuAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP3Cpu23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP3Cpu23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP3Cpu23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP3Cpu23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP3CpuENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP3CpuENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal1IvP3CpuNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal1IvP3CpuNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTI9CpuAction[_ZTI9CpuAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTI3Cpu[_ZTI3Cpu]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.rodata._ZTI8CpuModel[_ZTI8CpuModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_interface.cpp.o):(.eh_frame+0x8b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiTgmr::~CpuTiTgmr() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:55: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiTgmr::integrate(double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:89: référence indéfinie vers « ceil »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:90: référence indéfinie vers « ceil »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:92: référence indéfinie vers « ceil »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:94: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiTgmr::solve(double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:208: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:210: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:211: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:224: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:295: encore plus de références indéfinies suivent vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiTgmr::CpuTiTgmr(tmgr_trace*, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:340: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:340: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « surf_cpu_model_init_ti »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:397: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:398: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:397: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:398: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiModel::CpuTiModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:409: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:411: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:409: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:411: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiModel::~CpuTiModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:421: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:422: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:424: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:424: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiModel::createCpu(char const*, xbt_dynar_s*, int, double, tmgr_trace*, int, e_surf_resource_state_t, tmgr_trace*, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:441: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:441: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiModel::addTraces() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:519: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:521: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:521: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTi::CpuTi(CpuTiModel*, char const*, xbt_dynar_s*, int, double, tmgr_trace*, int, e_surf_resource_state_t, tmgr_trace*, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:556: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:558: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:556: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:558: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTi::~CpuTi() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:583: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:584: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:585: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:585: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTi::updateState(tmgr_trace_event*, double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:611: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTi::execute(double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:800: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:800: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTi::sleep(double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:815: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.cpp:815: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiAction::~CpuTiAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.hpp:161: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o): dans la fonction « CpuTiAction::~CpuTiAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/cpu_ti.hpp:161: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTI11CpuTiAction[_ZTI11CpuTiAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTI5CpuTi[_ZTI5CpuTi]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTI10CpuTiModel[_ZTI10CpuTiModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTIN5boost9intrusive14list_base_hookINS0_3tagI5tiTagEEvvEE[_ZTIN5boost9intrusive14list_base_hookINS0_3tagI5tiTagEEvvEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE5tiTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE[_ZTIN5boost9intrusive12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE5tiTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEE5tiTagLj1EEE[_ZTIN5boost9intrusive11node_holderINS0_9list_nodeIPvEE5tiTagLj1EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.rodata._ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE5tiTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj0EEE[_ZTIN5boost9intrusive17hook_tags_definerINS0_12generic_hookINS0_24circular_list_algorithmsINS0_16list_node_traitsIPvEEEE5tiTagLNS0_14link_mode_typeE1ELNS0_14base_hook_typeE1EEELj0EEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(cpu_ti.cpp.o):(.eh_frame+0x4fb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « surf_network_model_init_LegrandVelho »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:55: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:55: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « surf_network_model_init_CM02 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:84: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:84: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « surf_network_model_init_Reno »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:110: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « surf_network_model_init_Reno2 »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:130: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:130: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « surf_network_model_init_Vegas »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:150: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:150: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Model::initialize() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:197: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:197: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Model::createNetworkLink(char const*, double, tmgr_trace*, double, tmgr_trace*, e_surf_resource_state_t, tmgr_trace*, e_surf_link_sharing_policy_t, s_xbt_dict*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:220: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:220: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Model::communicate(RoutingEdge*, RoutingEdge*, double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:394: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.cpp:394: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Model::~NetworkCm02Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.hpp:50: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Model::~NetworkCm02Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.hpp:50: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkAction::~NetworkAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.hpp:286: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkAction::~NetworkAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.hpp:286: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state>::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o): dans la fonction « NetworkCm02Action::~NetworkCm02Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.hpp:94: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_cm02.hpp:94: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP13NetworkActionP11RoutingEdgeS8_ddNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S8_S8_ddEEENSD_IFvRKNS2_10connectionES6_S8_S8_ddEEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal5_implIvP13NetworkActionP11RoutingEdgeS8_ddNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S8_S8_ddEEENSD_IFvRKNS2_10connectionES6_S8_S8_ddEEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP13NetworkActionP11RoutingEdgeSI_ddNS_8functionIFvSG_SI_SI_ddEEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot5IvP13NetworkActionP11RoutingEdgeSI_ddNS_8functionIFvSG_SI_SI_ddEEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.rodata._ZTI17NetworkCm02Action[_ZTI17NetworkCm02Action]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.rodata._ZTI15NetworkCm02Link[_ZTI15NetworkCm02Link]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.rodata._ZTI16NetworkCm02Model[_ZTI16NetworkCm02Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_cm02.cpp.o):(.eh_frame+0xcb): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « surf_network_model_init_Constant »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.cpp:23: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.cpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « NetworkConstantModel::communicate(RoutingEdge*, RoutingEdge*, double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.cpp:84: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.cpp:84: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « NetworkConstantAction::~NetworkConstantAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.hpp:57: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « NetworkConstantAction::~NetworkConstantAction() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.hpp:57: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « NetworkConstantLink::~NetworkConstantLink() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.hpp:44: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o): dans la fonction « NetworkConstantLink::~NetworkConstantLink() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.hpp:44: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o):/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_constant.hpp:27: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o):(.rodata._ZTI21NetworkConstantAction[_ZTI21NetworkConstantAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o):(.rodata._ZTI19NetworkConstantLink[_ZTI19NetworkConstantLink]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o):(.rodata._ZTI20NetworkConstantModel[_ZTI20NetworkConstantModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_constant.cpp.o):(.eh_frame+0x8b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « NetworkLink::~NetworkLink() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.cpp:134: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « NetworkLink::~NetworkLink() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_interface.cpp:134: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::signal1(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal1<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::~signal1() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal3() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::signal5(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:656: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::~signal5() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::~signal5() »:
/usr/include/boost/signals2/detail/signal_template.hpp:660: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::signal1_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::signal3_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::signal5_impl(boost::signals2::optional_last_value<void> const&, std::less<int> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:157: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot5<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)> >, boost::signals2::mutex> > > const&, boost::signals2::optional_last_value<void> const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:382: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::force_cleanup_connections(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const*) const »:
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:499: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >) const »:
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/optional_last_value.hpp:57: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex> >(boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state::invocation_state(boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state const&, boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:386: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex> >(boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:285: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base const*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex> >(boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex> >(boost::signals2::detail::signal5_impl<void, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::deallocate(std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state>(boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::invocation_state*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal1_impl<void, NetworkLink*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*)>, boost::function<void (boost::signals2::connection const&, NetworkLink*)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_erase(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1774: référence indéfinie vers « std::__detail::_List_node_base::_M_unhook() »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::signal3_impl<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::slot_invoker, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::dereference() const »:
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:87: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/signals2/detail/slot_call_iterator.hpp:84: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « void boost::checked_delete<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >(boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >*) »:
/usr/include/boost/core/checked_delete.hpp:34: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::deallocate(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:1755: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >* std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_copy<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > const*, std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:1608: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:1605: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::_M_create_node(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_list.h:562: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_list.h:559: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_insert_<std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&, std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_List_node<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « std::_Rb_tree<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >, std::_Select1st<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >, boost::signals2::detail::group_key_less<int, std::less<int> >, std::allocator<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::_M_construct_node(std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > >*, std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > const&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_tree.h:507: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_tree.h:504: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> > const, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > > > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, NetworkLink*, boost::function<void (NetworkLink*)> >, boost::signals2::mutex> > > >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV11NetworkLink[_ZTV11NetworkLink]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV11NetworkLink[_ZTV11NetworkLink]+0x50): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV11NetworkLink[_ZTV11NetworkLink]+0x60): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV12NetworkModel[_ZTV12NetworkModel]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV12NetworkModel[_ZTV12NetworkModel]+0x80): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTV12NetworkModel[_ZTV12NetworkModel]+0x90): encore plus de références indéfinies suivent vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, RoutingEdge*, RoutingEdge*, double, double)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o): dans la fonction « boost::signals2::signal<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::function<void (boost::signals2::connection const&, NetworkLink*, e_surf_resource_state_t, e_surf_resource_state_t)>, boost::signals2::mutex>::~signal() »:
/usr/include/boost/signals2/preprocessed_signal.hpp:41: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):/usr/include/boost/signals2/preprocessed_signal.hpp:41: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP13NetworkAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP13NetworkAction21e_surf_action_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP11NetworkLink23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP11NetworkLink23e_surf_resource_state_tSH_NS_8functionIFvSG_SH_SH_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP11NetworkLinkNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP11NetworkLinkNS_8functionIFvSG_EEEEENS2_5mutexEEEEEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP13NetworkAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP13NetworkAction21e_surf_action_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP11NetworkLink23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal3_implIvP11NetworkLink23e_surf_resource_state_tS7_NS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_S7_EEENSC_IFvRKNS2_10connectionES6_S7_S7_EEENS2_5mutexEE16invocation_stateEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP11NetworkLinkNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIvP11NetworkLinkNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_EEENSB_IFvRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE]+0x0): encore plus de références indéfinies suivent vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal5IvP13NetworkActionP11RoutingEdgeS5_ddNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S5_S5_ddEEENSA_IFvRKNS0_10connectionES3_S5_S5_ddEEENS0_5mutexEEE[_ZTIN5boost8signals27signal5IvP13NetworkActionP11RoutingEdgeS5_ddNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S5_S5_ddEEENSA_IFvRKNS0_10connectionES3_S5_S5_ddEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP13NetworkAction21e_surf_action_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP13NetworkAction21e_surf_action_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP13NetworkAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP13NetworkAction21e_surf_action_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP11NetworkLink23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP11NetworkLink23e_surf_resource_state_tS4_ENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS5_EENSA_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal3IvP11NetworkLink23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal3IvP11NetworkLink23e_surf_resource_state_tS4_NS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_S4_S4_EEENS9_IFvRKNS0_10connectionES3_S4_S4_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals26signalIFvP11NetworkLinkENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals26signalIFvP11NetworkLinkENS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIS4_EENS9_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTIN5boost8signals27signal1IvP11NetworkLinkNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE[_ZTIN5boost8signals27signal1IvP11NetworkLinkNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS3_EEENS8_IFvRKNS0_10connectionES3_EEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__vmi_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTI13NetworkAction[_ZTI13NetworkAction]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTI11NetworkLink[_ZTI11NetworkLink]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.rodata._ZTI12NetworkModel[_ZTI12NetworkModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_interface.cpp.o):(.eh_frame+0x8b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_smpi.cpp.o): dans la fonction « surf_network_model_init_SMPI »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_smpi.cpp:80: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_smpi.cpp:80: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_smpi.cpp.o): dans la fonction « NetworkSmpiModel::~NetworkSmpiModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_smpi.cpp:105: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_smpi.cpp.o): dans la fonction « NetworkSmpiModel::~NetworkSmpiModel() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/network_smpi.cpp:105: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_smpi.cpp.o):(.rodata._ZTI16NetworkSmpiModel[_ZTI16NetworkSmpiModel]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(network_smpi.cpp.o):(.eh_frame+0x14b): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « energyCpuCreatedCallback(Cpu*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:23: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:23: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « energyCpuDestructedCallback(Cpu*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:30: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « sg_energy_plugin_exit() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:59: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « sg_energy_plugin_init »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:69: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/plugins/energy.cpp:69: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body_base::~connection_body_base() »:
/usr/include/boost/signals2/connection.hpp:40: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body_base::~connection_body_base() »:
/usr/include/boost/signals2/connection.hpp:40: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::_Rb_tree<Cpu*, std::pair<Cpu* const, CpuEnergy*>, std::_Select1st<std::pair<Cpu* const, CpuEnergy*> >, std::less<Cpu*>, std::allocator<std::pair<Cpu* const, CpuEnergy*> > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<Cpu* const, CpuEnergy*> >) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:2258: référence indéfinie vers « std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::create_new_connection(boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::create_new_connection(boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::create_new_connection(boost::signals2::slot0<void, boost::function<void ()> > const&) »:
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:511: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « __gnu_cxx::new_allocator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « __gnu_cxx::new_allocator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> >::deallocate(boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<Cpu* const, CpuEnergy*> > std::_Rb_tree<Cpu*, std::pair<Cpu* const, CpuEnergy*>, std::_Select1st<std::pair<Cpu* const, CpuEnergy*> >, std::less<Cpu*>, std::allocator<std::pair<Cpu* const, CpuEnergy*> > >::_M_insert_<std::_Rb_tree<Cpu*, std::pair<Cpu* const, CpuEnergy*>, std::_Select1st<std::pair<Cpu* const, CpuEnergy*> >, std::less<Cpu*>, std::allocator<std::pair<Cpu* const, CpuEnergy*> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<Cpu* const, CpuEnergy*> const&, std::_Rb_tree<Cpu*, std::pair<Cpu* const, CpuEnergy*>, std::_Select1st<std::pair<Cpu* const, CpuEnergy*> >, std::less<Cpu*>, std::allocator<std::pair<Cpu* const, CpuEnergy*> > >::_Alloc_node&) »:
/usr/include/c++/5.1.0/bits/stl_tree.h:1521: référence indéfinie vers « std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::function1<void, Cpu*>::move_assign(boost::function1<void, Cpu*>&) »:
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/function/function_template.hpp:1011: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal1_impl<void, Cpu*, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (Cpu*)>, boost::function<void (boost::signals2::connection const&, Cpu*)>, boost::signals2::mutex>::nolock_force_unique_connection_list() »:
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::function3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t>::move_assign(boost::function3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t>&) »:
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/function/function_template.hpp:1011: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal3_impl<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::function<void (boost::signals2::connection const&, CpuAction*, e_surf_action_state_t, e_surf_action_state_t)>, boost::signals2::mutex>::nolock_force_unique_connection_list() »:
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::function0<void>::move_assign(boost::function0<void>&) »:
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/function/function_template.hpp:1011: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/function/function_template.hpp:1009: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::signal0_impl<void, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void ()>, boost::function<void (boost::signals2::connection const&)>, boost::signals2::mutex>::nolock_force_unique_connection_list() »:
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/signals2/detail/signal_template.hpp:477: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<Cpu* const, CpuEnergy*> >::operator--() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:220: référence indéfinie vers « std::_Rb_tree_decrement(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::_Rb_tree_iterator<std::pair<Cpu* const, CpuEnergy*> >::operator++() »:
/usr/include/c++/5.1.0/bits/stl_tree.h:205: référence indéfinie vers « std::_Rb_tree_increment(std::_Rb_tree_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<Cpu* const, CpuEnergy*> > >::deallocate(std::_Rb_tree_node<std::pair<Cpu* const, CpuEnergy*> >*, unsigned long) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:110: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > > >::insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/list.tcc:107: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > > >::insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/list.tcc:107: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « std::list<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >, std::allocator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > > >::insert(std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > >, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> > const&) »:
/usr/include/c++/5.1.0/bits/list.tcc:107: référence indéfinie vers « std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >(boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >(boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::shared_count::shared_count<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >(boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex>*) »:
/usr/include/boost/smart_ptr/detail/shared_count.hpp:130: référence indéfinie vers « operator new(unsigned long) »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_begin_catch »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:135: référence indéfinie vers « __cxa_rethrow »
/usr/include/boost/smart_ptr/detail/shared_count.hpp:132: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::variant::backup_holder<boost::weak_ptr<boost::signals2::detail::trackable_pointee> >::~backup_holder() »:
/usr/include/boost/variant/detail/backup_holder.hpp:33: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::variant::backup_holder<boost::weak_ptr<void> >::~backup_holder() »:
/usr/include/boost/variant/detail/backup_holder.hpp:33: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::variant::backup_holder<boost::signals2::detail::foreign_void_weak_ptr>::~backup_holder() »:
/usr/include/boost/variant/detail/backup_holder.hpp:33: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const*, std::vector<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, std::allocator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > > >, boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*>(__gnu_cxx::__normal_iterator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const*, std::vector<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, std::allocator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > > >, __gnu_cxx::__normal_iterator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> const*, std::vector<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>, std::allocator<boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_> > > >, boost::variant<boost::weak_ptr<boost::signals2::detail::trackable_pointee>, boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_, boost::detail::variant::void_>*) »:
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_begin_catch »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:81: référence indéfinie vers « __cxa_rethrow »
/usr/include/c++/5.1.0/bits/stl_uninitialized.h:78: référence indéfinie vers « __cxa_end_catch »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex>::~connection_body() »:
/usr/include/boost/signals2/connection.hpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex>::~connection_body() »:
/usr/include/boost/signals2/connection.hpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex>::~connection_body() »:
/usr/include/boost/signals2/connection.hpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex>::~connection_body() »:
/usr/include/boost/signals2/connection.hpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex>::~connection_body() »:
/usr/include/boost/signals2/connection.hpp:90: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):/usr/include/boost/signals2/connection.hpp:90: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<Cpu* const, CpuEnergy*> > >::allocate(unsigned long, void const*) »:
/usr/include/c++/5.1.0/ext/new_allocator.h:102: référence indéfinie vers « std::__throw_bad_alloc() »
/usr/include/c++/5.1.0/ext/new_allocator.h:104: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot0<void, boost::function<void ()> >, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot3<void, CpuAction*, e_surf_action_state_t, e_surf_action_state_t, boost::function<void (CpuAction*, e_surf_action_state_t, e_surf_action_state_t)> >, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o): dans la fonction « boost::detail::sp_counted_impl_p<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, Cpu*, boost::function<void (Cpu*)> >, boost::signals2::mutex> >::~sp_counted_impl_p() »:
/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):/usr/include/boost/smart_ptr/detail/sp_counted_impl.hpp:53: encore plus de références indéfinies suivent vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTVN5boost8signals26detail20connection_body_baseE[_ZTVN5boost8signals26detail20connection_body_baseE]+0x20): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTVN5boost8signals26detail20connection_body_baseE[_ZTVN5boost8signals26detail20connection_body_baseE]+0x28): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTVN5boost8signals26detail20connection_body_baseE[_ZTVN5boost8signals26detail20connection_body_baseE]+0x30): référence indéfinie vers « __cxa_pure_virtual »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot0IvNS_8functionIFvvEEEEENS2_5mutexEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIPFvvE[_ZTIPFvvE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__pointer_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP9CpuAction21e_surf_action_state_tSD_NS_8functionIFvSC_SD_SD_EEEEENS2_5mutexEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot3IvP9CpuAction21e_surf_action_state_tSD_NS_8functionIFvSC_SD_SD_EEEEENS2_5mutexEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIPFvP9CpuAction21e_surf_action_state_tS1_E[_ZTIPFvP9CpuAction21e_surf_action_state_tS1_E]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__pointer_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP3CpuNS_8functionIFvSC_EEEEENS2_5mutexEEEEE[_ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IvP3CpuNS_8functionIFvSC_EEEEENS2_5mutexEEEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIPFvP3CpuE[_ZTIPFvP3CpuE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__pointer_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot0IvNS_8functionIFvvEEEEENS0_5mutexEEE[_ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot0IvNS_8functionIFvvEEEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IvP9CpuAction21e_surf_action_state_tSB_NS_8functionIFvSA_SB_SB_EEEEENS0_5mutexEEE[_ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot3IvP9CpuAction21e_surf_action_state_tSB_NS_8functionIFvSA_SB_SB_EEEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP3CpuNS_8functionIFvSA_EEEEENS0_5mutexEEE[_ZTIN5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IvP3CpuNS_8functionIFvSA_EEEEENS0_5mutexEEE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIN5boost8signals26detail20connection_body_baseE[_ZTIN5boost8signals26detail20connection_body_baseE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIFvvE[_ZTIFvvE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__function_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIFvP3CpuE[_ZTIFvP3CpuE]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__function_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.rodata._ZTIFvP9CpuAction21e_surf_action_state_tS1_E[_ZTIFvP9CpuAction21e_surf_action_state_tS1_E]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__function_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(energy.cpp.o):(.eh_frame+0x5e7): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(random_mgr.c.o): dans la fonction « random_generate »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/random_mgr.c:236: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/random_mgr.c:247: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/random_mgr.c:248: référence indéfinie vers « exp »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/random_mgr.c:249: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/random_mgr.c:250: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « surf_storage_model_init_default »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:215: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:215: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Model::~StorageN11Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:235: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Model::~StorageN11Model() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:235: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Model::createStorage(char const*, char const*, char const*, char const*, s_xbt_dict*, char const*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:254: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:254: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Model::updateActionsState(double, double) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:319: référence indéfinie vers « lrint »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:319: référence indéfinie vers « lrint »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:327: référence indéfinie vers « lrint »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:328: référence indéfinie vers « lrint »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::open(char const*, char const*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:405: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:405: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::close(surf_file*) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:429: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:429: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::read(surf_file*, unsigned long long) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:442: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:442: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::write(surf_file*, unsigned long long) »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:451: référence indéfinie vers « operator new(unsigned long) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.cpp:451: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Action::~StorageN11Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.hpp:72: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11Action::~StorageN11Action() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.hpp:72: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::~StorageN11() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.hpp:51: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o): dans la fonction « StorageN11::~StorageN11() »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/storage_n11.hpp:51: référence indéfinie vers « operator delete(void*) »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o):(.rodata._ZTI16StorageN11Action[_ZTI16StorageN11Action]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o):(.rodata._ZTI10StorageN11[_ZTI10StorageN11]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o):(.rodata._ZTI15StorageN11Model[_ZTI15StorageN11Model]+0x0): référence indéfinie vers « vtable for __cxxabiv1::__si_class_type_info »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(storage_n11.cpp.o):(.eh_frame+0x443): référence indéfinie vers « __gxx_personality_v0 »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_mod_preinit »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:98: référence indéfinie vers « pthread_key_create »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:109: référence indéfinie vers « pthread_setspecific »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:116: référence indéfinie vers « pthread_attr_init »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_atfork »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:154: référence indéfinie vers « pthread_atfork »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « wrapper_start_routine »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:163: référence indéfinie vers « pthread_setspecific »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_create »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:190: référence indéfinie vers « pthread_create »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_setstacksize »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:230: référence indéfinie vers « pthread_attr_setstacksize »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:240: référence indéfinie vers « pthread_attr_setstacksize »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_setguardsize »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:256: référence indéfinie vers « pthread_attr_setguardsize »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_join »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:278: référence indéfinie vers « pthread_join »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_exit »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:286: référence indéfinie vers « pthread_exit »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_self »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:296: référence indéfinie vers « pthread_getspecific »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_key_create »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:304: référence indéfinie vers « pthread_key_create »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_set_specific »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:311: référence indéfinie vers « pthread_setspecific »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_get_specific »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:316: référence indéfinie vers « pthread_getspecific »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_detach »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:322: référence indéfinie vers « pthread_detach »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_thread_cancel »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:333: référence indéfinie vers « pthread_cancel »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_mutex_init »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:350: référence indéfinie vers « pthread_mutex_init »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_mutex_acquire »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:361: référence indéfinie vers « pthread_mutex_lock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_mutex_timedacquire »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:375: référence indéfinie vers « pthread_mutex_trylock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:395: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:399: référence indéfinie vers « pthread_mutex_timedlock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_mutex_release »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:434: référence indéfinie vers « pthread_mutex_unlock »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_mutex_destroy »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:446: référence indéfinie vers « pthread_mutex_destroy »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_init »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:462: référence indéfinie vers « pthread_cond_init »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_wait »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:472: référence indéfinie vers « pthread_cond_wait »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_timedwait »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:488: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:492: référence indéfinie vers « pthread_cond_timedwait »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_signal »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:511: référence indéfinie vers « pthread_cond_signal »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_broadcast »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:519: référence indéfinie vers « pthread_cond_broadcast »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_cond_destroy »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:531: référence indéfinie vers « pthread_cond_destroy »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_init »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:564: référence indéfinie vers « sem_init »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_acquire »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:597: référence indéfinie vers « sem_wait »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_timedacquire »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:611: référence indéfinie vers « sem_trywait »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:637: référence indéfinie vers « sem_trywait »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_release »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:667: référence indéfinie vers « sem_post »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_destroy »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:677: référence indéfinie vers « sem_destroy »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_thread.c.o): dans la fonction « xbt_os_sem_get_value »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_thread.c:695: référence indéfinie vers « sem_getvalue »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(xbt_os_time.c.o): dans la fonction « xbt_os_sleep »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/xbt/xbt_os_time.c:85: référence indéfinie vers « floor »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(lagrange.cpp.o): dans la fonction « func_vegas_f »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/lagrange.cpp:586: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(lagrange.cpp.o): dans la fonction « func_reno_f »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/lagrange.cpp:612: référence indéfinie vers « atan »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(lagrange.cpp.o): dans la fonction « func_reno_fpi »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/lagrange.cpp:634: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(lagrange.cpp.o): dans la fonction « func_reno2_f »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/lagrange.cpp:647: référence indéfinie vers « log »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(lagrange.cpp.o): dans la fonction « func_reno2_fpi »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/surf/lagrange.cpp:670: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(allgather-2dmesh.c.o): dans la fonction « is_2dmesh »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/colls/allgather-2dmesh.c:72: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(allgather-3dmesh.c.o): dans la fonction « is_3dmesh »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/colls/allgather-3dmesh.c:66: référence indéfinie vers « cbrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(alltoall-2dmesh.c.o): dans la fonction « alltoall_check_is_2dmesh »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/colls/alltoall-2dmesh.c:36: référence indéfinie vers « sqrt »
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/SIMGRID/lib/libsimgrid.a(alltoall-3dmesh.c.o): dans la fonction « alltoall_check_is_3dmesh »:
/home/steven/Programmation/TER/starpu-simgrid/src/simgrid/src/smpi/colls/alltoall-3dmesh.c:36: référence indéfinie vers « cbrt »
collect2: erreur: ld a retourné 1 code d'état d'exécution
<commande interne> : la recette pour la cible « test » a échouée
make: *** [test] Erreur 1
